//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: wxgui.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#ifdef __GNUG__
    #pragma implementation "NResources_wdr.cpp"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "NResources_wdr.h"


// Custom source
#include "wx/treebase.h"
#include "wx/generic/treectlg.h"
#include "NContactTree.h"
#include "NXpms.h"
#include "NPrefs.h"

/*
    GNU Messenger - The secure instant messenger
    Copyright (C) 2001  Jesse Lovelace
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*/

// Implement window functions



wxSizer *ChatWindow( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxNotebook *item2 = new wxNotebook( parent, ID_CHAT_NOTEBOOK, wxDefaultPosition, wxSize(200,160), 0 );
    wxNotebookSizer *item1 = new wxNotebookSizer( item2 );

    wxPanel *item3 = new wxPanel( item2, -1 );
    ChatPage1( item3, FALSE );
    item2->AddPage( item3, "Chat" );

    wxPanel *item4 = new wxPanel( item2, -1 );
    ChatPage2( item4, FALSE );
    item2->AddPage( item4, "File" );

    item0->Add( item1, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *ChatPage1( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxSplitterWindow *item1 = new wxSplitterWindow( parent, ID_SPLITTER, wxDefaultPosition, wxSize(200,160), wxSP_3D|wxCLIP_CHILDREN );
    item1->SetMinimumPaneSize( 20 );
    item0->Add( item1, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *ChatPage1b( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 2, 0, 0 );
    item0->AddGrowableCol( 0 );

    wxWindow *item1 = parent->FindWindow( ID_CHAT_HTMLINPUT );
    wxASSERT( item1 );
    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxWindow *item2 = parent->FindWindow( ID_CHAT_NNIM_BUTTON );
    wxASSERT( item2 );
    item0->Add( item2, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *ChatPage2( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 2, 0, 0 );
    item0->AddGrowableCol( 0 );

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item2 = new wxStaticText( parent, ID_TEXT, "File to send:", wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item2, 0, wxALIGN_CENTRE|wxLEFT|wxRIGHT|wxTOP, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER_VERTICAL, 5 );

    item0->Add( 20, 20, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxTextCtrl *item3 = new wxTextCtrl( parent, ID_TEXTCTRL, "", wxDefaultPosition, wxSize(180,-1), 0 );
    item0->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxButton *item4 = new wxButton( parent, ID_BUTTON, "Browse", wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item4, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxButton *item5 = new wxButton( parent, ID_BUTTON, "Send", wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item5, 0, wxALL, 5 );

    wxStaticBox *item7 = new wxStaticBox( parent, -1, "Options" );
    wxStaticBoxSizer *item6 = new wxStaticBoxSizer( item7, wxVERTICAL );

    wxCheckBox *item8 = new wxCheckBox( parent, ID_CHECKBOX, "Encrypt", wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxCheckBox *item9 = new wxCheckBox( parent, ID_CHECKBOX, "Compress", wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item9, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item6, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxGauge *item10 = new wxGauge( parent, ID_GAUGE, 100, wxDefaultPosition, wxSize(100,-1), 0 );
    item0->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item11 = new wxStaticText( parent, ID_TEXT, "0 KB/s", wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item11, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}
/*
wxSizer *Contacts( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 0 );

    wxGenericTreeCtrl *item1 = new guiContactTree( parent, ID_TREE_CONTROL, wxDefaultPosition, wxSize(120,160), wxTR_HAS_BUTTONS|wxSUNKEN_BORDER );
    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxBoxSizer *item2 = new wxBoxSizer( wxHORIZONTAL );

    wxWindow *item3 = parent->FindWindow( ID_CONTACTS_BUTT_BITMAP );
    wxASSERT( item3 );
    item2->Add( item3, 0, wxALIGN_CENTRE, 5 );

    item0->Add( item2, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}*/

wxSizer *ContactEditor( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxFlexGridSizer *item1 = new wxFlexGridSizer( 1, 0, 0 );
    item1->AddGrowableCol( 0 );

    wxFlexGridSizer *item2 = new wxFlexGridSizer( 2, 0, 0 );
    item2->AddGrowableCol( 1 );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, "Name:", wxDefaultPosition, wxDefaultSize, 0 );
    item2->Add( item3, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item4 = new wxTextCtrl( parent, ID_CON_EDIT_NAME, "", wxDefaultPosition, wxSize(100,-1), 0 );
    item2->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    item2->Add( 20, 20, 0, wxALIGN_CENTRE, 5 );

    wxStaticText *item5 = new wxStaticText( parent, ID_TEXT, "(does not need to be a screen name)", wxDefaultPosition, wxDefaultSize, 0 );
    item2->Add( item5, 0, wxALIGN_CENTRE|wxLEFT|wxRIGHT, 5 );

    item1->Add( item2, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    wxStaticBox *item7 = new wxStaticBox( parent, -1, "Information" );
    wxStaticBoxSizer *item6 = new wxStaticBoxSizer( item7, wxVERTICAL );

    wxFlexGridSizer *item8 = new wxFlexGridSizer( 2, 0, 0 );
    item8->AddGrowableCol( 1 );
    item8->AddGrowableRow( 0 );

    wxFlexGridSizer *item9 = new wxFlexGridSizer( 1, 0, 0 );
    item9->AddGrowableRow( 0 );
    item9->AddGrowableRow( 1 );

    wxString strs10[] = 
    {
        "ComboItem"
    };
    wxComboBox *item10 = new wxComboBox( parent, ID_CON_EDIT_INFO_LIST, "", wxDefaultPosition, wxSize(100,-1), 1, strs10, wxCB_DROPDOWN|wxCB_READONLY );
    item9->Add( item10, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxFlexGridSizer *item11 = new wxFlexGridSizer( 2, 0, 0 );

    wxButton *item12 = new wxButton( parent, ID_CON_EDIT_ADDINFO, "[+]", wxDefaultPosition, wxSize(20,-1), 0 );
    item11->Add( item12, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxButton *item13 = new wxButton( parent, ID_CON_EDIT_REMOVEINFO, "[-]", wxDefaultPosition, wxSize(20,-1), 0 );
    item11->Add( item13, 0, wxALIGN_CENTRE|wxALL, 5 );

    item9->Add( item11, 0, wxALIGN_CENTRE, 5 );

    item8->Add( item9, 0, wxRIGHT|wxTOP|wxBOTTOM, 5 );

    wxTextCtrl *item14 = new wxTextCtrl( parent, ID_CON_EDIT_INFO_TEXT, "", wxDefaultPosition, wxSize(130,70), wxTE_MULTILINE );
    item8->Add( item14, 0, wxGROW, 5 );

    item6->Add( item8, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 5 );

    item1->Add( item6, 0, wxGROW|wxLEFT|wxRIGHT, 5 );

    wxStaticBox *item16 = new wxStaticBox( parent, -1, "Select network(s) for this contact" );
    wxStaticBoxSizer *item15 = new wxStaticBoxSizer( item16, wxVERTICAL );

    wxFlexGridSizer *item17 = new wxFlexGridSizer( 3, 0, 0 );
    item17->AddGrowableCol( 0 );
    item17->AddGrowableCol( 2 );
    item17->AddGrowableRow( 0 );

    wxString strs18[] = 
    {
        "ListItem"
    };
    wxListBox *item18 = new wxListBox( parent, ID_CON_EDIT_NETS_USER, wxDefaultPosition, wxSize(80,100), 1, strs18, wxLB_SINGLE );
    item17->Add( item18, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxBoxSizer *item19 = new wxBoxSizer( wxVERTICAL );

    wxButton *item20 = new wxButton( parent, ID_CON_EDIT_ADDNET, "<-", wxDefaultPosition, wxSize(20,-1), 0 );
    item19->Add( item20, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxButton *item21 = new wxButton( parent, ID_CON_EDIT_REMOVENET, "X", wxDefaultPosition, wxSize(20,-1), 0 );
    item19->Add( item21, 0, wxALIGN_CENTRE|wxALL, 5 );

    item17->Add( item19, 0, wxALIGN_CENTRE, 5 );

    wxString strs22[] = 
    {
        "ListItem"
    };
    wxListBox *item22 = new wxListBox( parent, ID_CON_EDIT_NETS_ALL, wxDefaultPosition, wxSize(80,100), 1, strs22, wxLB_SINGLE );
    item17->Add( item22, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item15->Add( item17, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxFlexGridSizer *item23 = new wxFlexGridSizer( 2, 0, 0 );
    item23->AddGrowableCol( 1 );

    wxStaticText *item24 = new wxStaticText( parent, ID_TEXT, "Screen name (or UIN):", wxDefaultPosition, wxDefaultSize, 0 );
    item23->Add( item24, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item25 = new wxTextCtrl( parent, ID_CON_EDIT_NETS_SCREEN_NAME, "", wxDefaultPosition, wxSize(80,-1), 0 );
    item23->Add( item25, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    wxStaticText *item26 = new wxStaticText( parent, ID_TEXT, "Network preference:", wxDefaultPosition, wxDefaultSize, 0 );
    item23->Add( item26, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxString strs27[] = 
    {
        "Default", 
        "High", 
        "Low"
    };
    wxChoice *item27 = new wxChoice( parent, ID_CON_EDIT_NET_PREF, wxDefaultPosition, wxSize(100,-1), 3, strs27, 0 );
    item23->Add( item27, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item15->Add( item23, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 5 );

    item1->Add( item15, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}



wxSizer *PrefGeneral( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item1 = new wxStaticText( parent, ID_TEXT, "General settings", wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item1, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}



wxSizer *PrefContact( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, "Contacts" );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, 
        "To view a contact's settings, click on their name.\n"
        "If you would like to add a contact, press the\n"
        "\"Add Contact\" button and the New User Wizard will\n"
        "begin.",
        wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item4 = new wxButton( parent, ID_PREF_BUTT_ADDCONTACT, "Add Contact", wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *PrefSecurity( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item1 = new wxStaticText( parent, ID_TEXT, "Security settings", wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item1, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *PrefPlugins( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item1 = new wxStaticText( parent, ID_TEXT, "Plug-ins", wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item1, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *NewUserWizard1( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 0 );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, "New User Wizard 1/3" );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, "Welcome to the new user wizard!", wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item4 = new wxStaticText( parent, ID_TEXT, "Please choose a name that you will log into NNIM with:", wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item5 = new wxTextCtrl( parent, ID_TEXTCTRL, "", wxDefaultPosition, wxSize(80,-1), 0 );
    item1->Add( item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item6 = new wxFlexGridSizer( 2, 0, 0 );

    wxButton *item7 = new wxButton( parent, ID_BUTTON, "Next", wxDefaultPosition, wxDefaultSize, 0 );
    item7->SetDefault();
    item6->Add( item7, 0, wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL|wxALL, 5 );

    wxButton *item8 = new wxButton( parent, ID_BUTTON, "Cancel", wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item8, 0, wxALIGN_CENTRE|wxALL, 5 );

    item0->Add( item6, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *NewUserWizard2( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 0 );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, "New User Wizard 2/3" );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, "Now it is time to choose a password.", wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item4 = new wxStaticText( parent, ID_TEXT, 
        "Please type your password below.  Remember, the security of your data\n"
        "is only as strong as the password protecting it.  The password strength\n"
        "meter will give you a good estimate of the password strength.",
        wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item5 = new wxTextCtrl( parent, ID_TEXTCTRL, "", wxDefaultPosition, wxSize(80,-1), wxTE_PASSWORD );
    item1->Add( item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item6 = new wxFlexGridSizer( 2, 0, 0 );
    item6->AddGrowableCol( 1 );

    wxStaticText *item7 = new wxStaticText( parent, ID_TEXT, "Password strength:", wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item7, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxGauge *item8 = new wxGauge( parent, ID_GAUGE, 100, wxDefaultPosition, wxSize(100,-1), 0 );
    item6->Add( item8, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item1->Add( item6, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item9 = new wxFlexGridSizer( 3, 0, 0 );
    item9->AddGrowableCol( 2 );

    wxButton *item10 = new wxButton( parent, ID_BUTTON, "Next", wxDefaultPosition, wxDefaultSize, 0 );
    item10->SetDefault();
    item9->Add( item10, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item11 = new wxButton( parent, ID_BUTTON, "Back", wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item11, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item12 = new wxButton( parent, ID_BUTTON, "Cancel", wxDefaultPosition, wxDefaultSize, 0 );
    item9->Add( item12, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *NewUserWizard3( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 0 );

    wxStaticBox *item2 = new wxStaticBox( parent, -1, "New User Wizard 3/3" );
    wxStaticBoxSizer *item1 = new wxStaticBoxSizer( item2, wxVERTICAL );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, 
        "Here you will setup the networks that you will\n"
        "communicate over.",
        wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item4 = new wxFlexGridSizer( 3, 0, 0 );
    item4->AddGrowableCol( 0 );
    item4->AddGrowableCol( 2 );
    item4->AddGrowableRow( 0 );

    wxString strs5[] = 
    {
        "ListItem"
    };
    wxListBox *item5 = new wxListBox( parent, ID_LISTBOX, wxDefaultPosition, wxSize(80,100), 1, strs5, wxLB_SINGLE );
    item4->Add( item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxBoxSizer *item6 = new wxBoxSizer( wxVERTICAL );

    wxButton *item7 = new wxButton( parent, ID_BUTTON, "<-", wxDefaultPosition, wxSize(20,-1), 0 );
    item6->Add( item7, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxButton *item8 = new wxButton( parent, ID_BUTTON, "X", wxDefaultPosition, wxSize(20,-1), 0 );
    item6->Add( item8, 0, wxALIGN_CENTRE|wxALL, 5 );

    item4->Add( item6, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxString strs9[] = 
    {
        "ListItem"
    };
    wxListBox *item9 = new wxListBox( parent, ID_LISTBOX, wxDefaultPosition, wxSize(80,100), 1, strs9, wxLB_SINGLE );
    item4->Add( item9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item1->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item10 = new wxFlexGridSizer( 3, 0, 0 );
    item10->AddGrowableCol( 2 );

    wxButton *item11 = new wxButton( parent, ID_BUTTON, "Next", wxDefaultPosition, wxDefaultSize, 0 );
    item11->SetDefault();
    item10->Add( item11, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item12 = new wxButton( parent, ID_BUTTON, "Back", wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item12, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item13 = new wxButton( parent, ID_BUTTON, "Cancel", wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item13, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *LogView( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 0 );

    wxListCtrl *item1 = new wxListCtrl( parent, ID_LOG_LIST, wxDefaultPosition, wxSize(160,120), wxLC_REPORT|wxLC_SINGLE_SEL|wxSUNKEN_BORDER );
    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}


wxSizer *Loading( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );

    wxStaticText *item1 = new wxStaticText( parent, ID_TEXT, "Loading NNIM...", wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE );
    item0->Add( item1, 0, wxALIGN_CENTRE|wxALL, 5 );

    wxGauge *item2 = new wxGauge( parent, ID_LOADING_GAUGE, 100, wxDefaultPosition, wxSize(100,-1), 0 );
    item0->Add( item2, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *ViewInfo( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 0 );

    wxWindow *item1 = parent->FindWindow( ID_VIEW_INFO_HTML );
    wxASSERT( item1 );
    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item2 = new wxButton( parent, ID_VIEW_INFO_OK_BUTTON, "OK", wxDefaultPosition, wxDefaultSize, 0 );
    item2->SetDefault();
    item0->Add( item2, 0, wxALIGN_CENTRE|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

wxSizer *AwayScreen( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 0 );

    wxListCtrl *item1 = new wxListCtrl( parent, ID_AWAY_LIST_CTRL, wxDefaultPosition, wxSize(160,120), wxLC_REPORT|wxSUNKEN_BORDER );
    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item2 = new wxFlexGridSizer( 1, 0, 0 );
    item2->AddGrowableCol( 0 );
    item2->AddGrowableCol( 1 );

    wxFlexGridSizer *item3 = new wxFlexGridSizer( 2, 0, 0 );
    item3->AddGrowableCol( 1 );

    wxStaticText *item4 = new wxStaticText( parent, ID_TEXT, "Away message:", wxDefaultPosition, wxDefaultSize, 0 );
    item3->Add( item4, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxString strs5[] = 
    {
        "ChoiceItem"
    };
    wxChoice *item5 = new wxChoice( parent, ID_AWAY_AWAY_MSGS, wxDefaultPosition, wxSize(100,-1), 1, strs5, 0 );
    item3->Add( item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    item2->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item6 = new wxFlexGridSizer( 2, 0, 0 );
    item6->AddGrowableCol( 0 );

    wxFlexGridSizer *item7 = new wxFlexGridSizer( 1, 0, 0 );

    wxCheckBox *item8 = new wxCheckBox( parent, ID_AWAY_DISABLE_SOUND, "Disable sounds", wxDefaultPosition, wxDefaultSize, 0 );
    item8->Enable( FALSE );
    item7->Add( item8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxCheckBox *item9 = new wxCheckBox( parent, ID_AWAY_HIDE_WINDOWS, "Hide chat windows", wxDefaultPosition, wxDefaultSize, 0 );
    item7->Add( item9, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item6->Add( item7, 0, wxALIGN_CENTRE|wxLEFT|wxRIGHT|wxBOTTOM, 5 );

    wxButton *item10 = new wxButton( parent, ID_AWAY_BUTTON_BACK, "I'm back", wxDefaultPosition, wxDefaultSize, 0 );
    item10->SetDefault();
    item6->Add( item10, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item2->Add( item6, 0, wxGROW|wxALIGN_CENTER_VERTICAL, 0 );

    item0->Add( item2, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

// Implement menubar functions



// Implement toolbar functions

// Implement bitmap functions

wxBitmap MyBitmapsFunc( size_t index )
{
    return wxNullBitmap;
}


// End of generated file
